# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Increment build number"
  lane :increment_build do |options|
    previous_build_number = google_play_track_version_codes(
      package_name: "com.minds.mobile",
      track: "production",
      json_key: 'app/play-store.json',
    )[0]
      
    current_build_number = options[:play] ?  previous_build_number + 1 : 1050000000 + previous_build_number + 1
      
    sh("sed -i 's/^versionCode=.*/versionCode="+(current_build_number.to_s)+"/' ../gradle.properties")
  end

  desc "Create a release build"
  lane :assemble_build do |options|
    sh("echo $ANDROID_KEYSTORE | base64 --decode > ../app/minds.keystore")
    sh("echo $ANDROID_KEYSTORE | base64 --decode > ../minds.keystore")
    sh("echo $SENTRY_ANDROID_PROPERTIES | base64 --decode > ../sentry.properties")
    sh("echo $ANDROID_PLAYSTORE_JSON | base64 --decode > ../app/play-store.json")
    
    # Increment build number
    increment_build(play: options[:play])

    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.enableJetifier" => "true",
        "android.useAndroidX" => "true",
        "android.injected.signing.store.file" => "minds.keystore",
        "android.injected.signing.store.password" => ENV['KEYSTORE_PASSWORD'],
        "android.injected.signing.key.alias" => "alias_name",
        "android.injected.signing.key.password" => ENV['KEYSTORE_PASSWORD'],
      }
    )
  end

  desc "Create a MR staging build"
  lane :assemble_mr_build do
    sh("echo $SENTRY_ANDROID_PROPERTIES | base64 --decode > ../sentry.properties")
    gradle(
      task: "assemble",
      build_type: "Release",
      print_command: false,
      properties: {
        "android.enableJetifier" => "true",
        "android.useAndroidX" => "true",
        "android.injected.signing.store.file" => "debug.keystore",
        "android.injected.signing.store.password" => "android",
        "android.injected.signing.key.alias" => "androiddebugkey",
        "android.injected.signing.key.password" => "android",
      }
    )
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end
end
