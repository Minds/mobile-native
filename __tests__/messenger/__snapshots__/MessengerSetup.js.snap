// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Messenger setup component should render correctly for setup 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#242A30",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "padding": 8,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "column",
        }
      }
    >
      <TextInput
        editable={true}
        keyboardAppearance="dark"
        onChangeText={[Function]}
        placeholder="password..."
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#ECECEC",
            "borderRadius": 3,
            "borderWidth": 1,
            "padding": 16,
          }
        }
        underlineColorAndroid="transparent"
      />
      <TextInput
        editable={true}
        keyboardAppearance="dark"
        onChangeText={[Function]}
        placeholder="confirm password..."
        secureTextEntry={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFF",
              "borderColor": "#ECECEC",
              "borderRadius": 3,
              "borderWidth": 1,
              "padding": 16,
            },
            Object {
              "marginTop": 8,
            },
          ]
        }
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "paddingTop": 16,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
            },
            Object {
              "fontFamily": "Roboto",
            },
            Object {
              "color": "#BBB",
              "marginBottom": 16,
            },
          ]
        }
      >
        Hey @[missing {{user}} value]! It looks like you haven't setup your encrypted chat password yet. We recommend that you use a different password than your account password for added security.
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "marginHorizontal": 16,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "stretch",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 100,
              "flexDirection": "column",
              "justifyContent": "center",
              "overflow": "hidden",
            },
            undefined,
            Object {
              "minHeight": 44,
              "paddingHorizontal": 24,
              "paddingVertical": 4,
            },
            undefined,
            undefined,
            false,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#3f4b56",
              "borderColor": "transparent",
              "borderRadius": 100,
              "borderWidth": 1,
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0,
                  },
                ],
              }
            }
          >
            <ActivityIndicator
              color="white"
              size="small"
            />
          </View>
        </View>
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
                Object {
                  "fontFamily": "Roboto-Medium",
                },
                Object {
                  "fontSize": 18,
                  "lineHeight": 24,
                },
                Object {
                  "textAlign": "left",
                },
              ]
            }
          >
            Setup
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;

exports[`Messenger setup component should render correctly for unlock 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#242A30",
      },
    ]
  }
>
  <View
    flex={true}
    style={
      Object {
        "marginHorizontal": 16,
        "marginTop": 16,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flexDirection": "column",
        }
      }
    >
      <TextInput
        editable={true}
        keyboardAppearance="dark"
        onChangeText={[Function]}
        placeholder="password..."
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "#FFF",
            "borderColor": "#ECECEC",
            "borderRadius": 3,
            "borderWidth": 1,
            "padding": 16,
          }
        }
        testID="MessengerSetupText"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "marginTop": 20,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
            },
            Object {
              "fontFamily": "Roboto",
            },
            Object {
              "fontSize": 14,
              "lineHeight": 20,
            },
            Object {
              "textAlign": "left",
            },
          ]
        }
      >
        · 
        You only need to enter this encryption password once as long as you stay signed in.
      </Text>
      <View
        style={
          Object {
            "marginTop": 12,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
              Object {
                "fontFamily": "Roboto",
              },
              Object {
                "fontSize": 14,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
        >
          · 
          It is important so that no one other than you and the people you are communicating with can access the content of your messages.
        </Text>
      </View>
      <View
        style={
          Object {
            "marginTop": 12,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#FFFFFF",
              },
              Object {
                "fontFamily": "Roboto",
              },
              Object {
                "fontSize": 14,
                "lineHeight": 20,
              },
              Object {
                "textAlign": "left",
              },
            ]
          }
        >
          · 
          By default the content of your messages is fully encrypted. For heightened security you may wish to go to your app settings and turn off push notifications in order to disallow metadata from being tracked.
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "marginHorizontal": 16,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "stretch",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderRadius": 100,
              "flexDirection": "column",
              "justifyContent": "center",
              "overflow": "hidden",
            },
            undefined,
            Object {
              "minHeight": 44,
              "paddingHorizontal": 24,
              "paddingVertical": 4,
            },
            undefined,
            undefined,
            false,
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#3f4b56",
              "borderColor": "transparent",
              "borderRadius": 100,
              "borderWidth": 1,
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            nativeID="animatedComponent"
            style={
              Object {
                "transform": Array [
                  Object {
                    "scale": 0,
                  },
                ],
              }
            }
          >
            <ActivityIndicator
              color="white"
              size="small"
            />
          </View>
        </View>
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "backgroundColor": "rgba(0, 0, 0, 0.1)",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
            }
          }
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
                Object {
                  "fontFamily": "Roboto-Medium",
                },
                Object {
                  "fontSize": 18,
                  "lineHeight": 24,
                },
                Object {
                  "textAlign": "left",
                },
              ]
            }
          >
            Unlock
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
