# Release Full Android
release:production:
  image: cimg/aws:2022.06.1
  stage: release
  tags: [minds-ci]
  dependencies:
    - build:androidproduction
    - upload:s3:oss
  rules:
    - if: $CI_COMMIT_TAG =~ /.*\.0$/ # Run only for tags that ends on .0 (major, minor releases)
      changes:
        - master
      when: manual
  before_script:
    - node -v
    - yarn install
  script:
    - !reference [.getversion, script]
    - cp $APK_NAME Minds-$APPVERSION.apk
    - echo "Releasing Minds-$APPVERSION.apk"
    - yarn release-json Minds-$APPVERSION.apk
    - aws s3 cp releases.json s3://minds-repo/android/releases/releases.json

release:google_play:
  image: msantang78/ci-mobile-android:latest
  stage: release
  tags: [minds-ci]
  before_script:
    - yarn install --frozen-lockfile
    - yarn release-json Minds.apk
    - cd android
    - bundle install --path=vendor/bundle
    - 'echo $ANDROID_PLAYSTORE_JSON | base64 --decode > app/play-store.json'
  script:
    - echo "Upload to the play store $APK_NAME"
    - bundle exec fastlane supply --apk ../$APK_NAME
  dependencies:
    - build:androidproduction-playstore
  rules:
    - if: $CI_COMMIT_TAG =~ /.*\.0$/ # Run only for tags that ends on .0 (major, minor releases)
      changes:
        - master

## CodePush releases
pushrelease:codepush-ios:
  image: node:14.19.1
  stage: pushrelease
  tags: [minds-ci]
  before_script:
    - npm install -g patch-package
    - npm install -g appcenter-cli
    - yarn install
  script:
    - appcenter codepush release-react -a Minds/Minds-iOS -d Staging
  only:
    refs:
      - master

pushrelease:codepush-android:
  image: node:14.19.1
  stage: pushrelease
  tags: [minds-ci]
  before_script:
    - npm install -g patch-package
    - npm install -g appcenter-cli
    - yarn install
  script:
    - appcenter codepush release-react -a Minds/Minds -d Staging
  only:
    refs:
      - master

## CodePush releases
pushrelease_prod:codepush-ios:
  image: node:14.19.1
  stage: pushrelease_prod
  tags: [minds-ci]
  before_script:
    - npm install -g patch-package
    - npm install -g appcenter-cli
    - yarn install
  script:
    - appcenter codepush release-react -a Minds/Minds-iOS -d Production
  rules:
    - if: $CI_COMMIT_TAG !~ /.*\.0$/ && $CI_COMMIT_TAG != null # Run only for tags that don't end on .0 (patch releases)
      changes:
        - master

pushrelease_prod:codepush-android:
  image: node:14.19.1
  stage: pushrelease_prod
  tags: [minds-ci]
  before_script:
    - npm install -g patch-package
    - npm install -g appcenter-cli
    - yarn install
  script:
    - appcenter codepush release-react -a Minds/Minds -d Production
  rules:
    - if: $CI_COMMIT_TAG !~ /.*\.0$/ && $CI_COMMIT_TAG != null # Run only for tags that don't end on .0 (patch releases)
      changes:
        - master

# iOS Release candidate to TestFlight
release:ios_rc_testflight:
  image: macos-12-xcode-14
  stage: release
  tags: [shared-macos-amd64]
  dependencies:
    - build:ios_release_candidate
  interruptible: true
  when: manual
  script:
    - cd ios
    - fastlane upload_testflight
  only:
    refs:
      - develop
      - master
  except:
    variables:
      - $CI_RC_NIGHTLY_TESTS == "true"
      - $CI_PROD_NIGHTLY_TESTS == "true"

# iOS production to TestFlight
release:ios_prod_testflight:
  image: macos-12-xcode-14
  stage: release
  tags: [shared-macos-amd64]
  dependencies:
    - build:ios_production
  interruptible: true
  script:
    - cd ios
    - fastlane upload_testflight
  rules:
    - if: $CI_COMMIT_TAG =~ /.*\.0$/ # Run only for tags that ends on .0 (major, minor releases)
      changes:
        - master
