.codepush_base:
  image: node:18.13.0
  tags: [minds-ci]
  stage: pushrelease
  needs: ['test:quality']
  before_script:
    - npm install -g patch-package
    - npm install -g appcenter-cli
    - yarn install
    - TAG_VERSION=${CI_COMMIT_TAG:1}
    - export RELEASE_VERSION=${TAG_VERSION:-$CI_COMMIT_BRANCH}

#===============| STAGING |===============>

pushrelease:staging:ios:
  extends:
    - .codepush_base
    - .only_develop
  environment: codepush_staging_ios
  script:
    - appcenter codepush release-react -a Minds/Minds-iOS -d Staging

pushrelease:staging:android:
  extends:
    - .codepush_base
    - .only_develop
  environment: codepush_staging_android
  script:
    - appcenter codepush release-react -a Minds/Minds -d Staging

#===============| RC |===============>

pushrelease:rc:ios:
  extends:
    - .codepush_base
    - .rule_release_branch
  environment: codepush_rc_ios
  script:
    - APP_VERSION=$RELEASE_VERSION appcenter codepush release-react -a Minds/Minds-iOS -d 'Release Candidate'

pushrelease:rc:android:
  extends:
    - .codepush_base
    - .rule_release_branch
  environment: codepush_rc_android
  script:
    - APP_VERSION=$RELEASE_VERSION appcenter codepush release-react -a Minds/Minds -d 'Release Candidate'

#===============| PRODUCTION |===============>

pushrelease:prod:ios:
  extends:
    - .codepush_base
    - .rule_patch_release
  environment: codepush_production_ios
  script:
    - APP_VERSION=$RELEASE_VERSION appcenter codepush release-react -a Minds/Minds-iOS -d Production

pushrelease:prod:android:
  extends:
    - .codepush_base
    - .rule_patch_release
  environment: codepush_production_android
  script:
    - APP_VERSION=$RELEASE_VERSION appcenter codepush release-react -a Minds/Minds -d Production
